name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - v*.*.*

jobs:
  build:
    strategy:
      matrix:
        name:
          - linux-amd64-gnu
          - linux-amd64-musl
          - linux-armhf-gnu
          - linux-arm64-gnu
          - mac-x86-64
          - mac-arm64
          - windows-x86-64
        include:
          - name: linux-amd64-gnu
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cross: false
            experimental: false

          - name: linux-amd64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            cross: true
            experimental: false

          - name: linux-armhf-gnu
            os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            cross: true
            experimental: false

          - name: linux-arm64-gnu
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            cross: true
            experimental: false

          - name: mac-x86-64
            os: macos-latest
            target: x86_64-apple-darwin
            cross: false
            experimental: false

          - name: mac-arm64
            os: macos-11.0
            target: aarch64-apple-darwin
            cross: true
            experimental: true

          - name: windows-x86-64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            cross: false
            experimental: false

          - name: windows-arm64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            cross: true
            experimental: true

    name: Binaries for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable
          profile: minimal
          override: true

      - uses: actions-rs/cargo@v1
        name: Build
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --locked --target ${{ matrix.target }}

      - name: Extract version
        shell: bash
        run: |
          set -euxo pipefail

          version=$(grep -m1 -F 'version =' Cargo.toml | cut -d\" -f2)

          if [[ -z "$version" ]]; then
            echo "Error: no version :("
            exit 1
          fi

          echo "$version" > VERSION

      - name: Package
        shell: bash
        run: |
          set -euxo pipefail
          ext=""
          [[ "${{ matrix.name }}" == windows-* ]] && ext=".exe"
          bin="target/${{ matrix.target }}/release/dnd_wiki${ext}"
          version=$(cat VERSION)
          dst="dnd_wiki-v${version}-${{ matrix.target }}"
          mkdir "$dst"
          strip "$bin" || true
          mv "$bin" "$dst/"
          mv README.md LICENSE completions dnd_wiki.1 "$dst/"

      - name: Archive (tar)
        if: '! startsWith(matrix.name, ''windows-'')'
        shell: bash
        run: |
          set -euxo pipefail
          version=$(cat VERSION)
          dst="dnd_wiki-v${version}-${{ matrix.target }}"
          tar cavf "$dst.tar.xz" "$dst"
      - name: Archive (deb)
        if: startsWith(matrix.name, 'linux-')
        shell: bash
        run: |
          set -euxo pipefail
          version=$(cat VERSION)
          dst="dnd_wiki-v${version}-${{ matrix.target }}"
          mkdir -p "deb/$dst"
          cd "deb/$dst"
          mkdir -p DEBIAN usr/{bin,share/{man/man1,zsh/site-functions}}
          cp "../../$dst/dnd_wiki" usr/bin/
          cp "../../$dst/dnd_wiki.1" usr/share/man/man1/
          cp "../../$dst/completions/zsh" usr/share/zsh/site-functions/_dnd_wiki
          cat <<-CONTROL > DEBIAN/control
          Package: dnd_wiki
          Version: ${version/v/}
          Architecture: $(echo "${{ matrix.name }}" | cut -d- -f2)
          Maintainer: FÃ©lix Saparelli <aur@passcod.name>
          Installed-Size: $(du -d1 usr | tail -n1 | cut -d\t -f1)
          Homepage: https://github.com/passcod/dnd_wiki
          Description: Watches over your Cargo project's source.
           Cargo Watch watches over your project's source for changes, and runs Cargo commands when they occur.
          CONTROL
          cd ..
          fakeroot dpkg -b "$dst"
          mv "$dst.deb" ../
          cd ..
      - name: Archive (zip)
        if: startsWith(matrix.name, 'windows-')
        shell: bash
        run: |
          set -euxo pipefail
          version=$(cat VERSION)
          dst="dnd_wiki-v${version}-${{ matrix.target }}"
          7z a "$dst.zip" "$dst"

      - uses: actions/upload-artifact@v2
        with:
          name: builds
          retention-days: 1
          path: |
            dnd_wiki-v*.tar.xz
            dnd_wiki-v*.deb
            dnd_wiki-v*.zip

  sign:
    needs: build

    name: Checksum and sign
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cargo/bin
          key: sign-tools-${{ hashFiles('.github/workflows/release.yml') }}

      - name: Build rsign2
        run: rsign --version | grep -xF 'rsign2 0.5.7' || cargo install rsign2 --version 0.5.7
      - name: Build b3sum
        run: b3sum --version | grep -xF 'b3sum 0.3.7' || cargo install b3sum --version 0.3.7

      - uses: actions/download-artifact@v2
        with:
          name: builds

      - name: Checksums with BLAKE3
        run: b3sum dnd_wiki-v* | tee -a B3SUMS

      - name: Checksums with SHA512
        run: sha512sum dnd_wiki-v* | tee -a SHA512SUMS

      - name: Sign checksums
        shell: bash
        env:
          RELEASE_KEY: ${{ secrets.RELEASE_KEY }}
        run: |
          set -u
          echo "$RELEASE_KEY" > release.key
          set -x
          version=$(grep -m1 -F 'version =' Cargo.toml | cut -d\" -f2)
          for algo in B3 SHA512; do
            echo | rsign sign \
              -p .github/workflows/release.pub \
              -s release.key \
              -t "dnd_wiki v$version signed with automated key" \
              -c 'see README.md for signing information' \
              -x "${algo}SUMS.auto.minisig" \
              "${algo}SUMS"
          done
          rm release.key
          cat {B3,SHA512}SUMS.auto.minisig

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            dnd_wiki-v*.tar.xz
            dnd_wiki-v*.deb
            dnd_wiki-v*.zip
            *SUMS*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}